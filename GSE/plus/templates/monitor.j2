<!doctype html>
<html lang="en">
<head>
	<title>GSE Monitor</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
	<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script> <script></script>
    <script>
    // the idea is to have as little js as possible. So jinja will be responsible for generating chart templates,
    // all this does it 1) get data to populate the charts and 2) updating the data as it comes in

    function initialize(){
    $( "div[class=container]" ).each(function(i, e){
        var div = document.createElement("div")
        div.classList.add('chart-container')
        var canvas = document.createElement("canvas")
        div.appendChild(canvas);
            e.appendChild(div);
        var ctx = canvas.getContext('2d');
        new Chart(ctx, {
        type: 'line',
        options: {
            responsive: true,
            animation: {
            easing: 'linear'
            },
        }
        });
    })
    }

    window.onload = () => {
        initialize();
    }

    function update(port){
    $.ajax({
        url: "../get?" + port,
        dataType: 'json',
        cache: false,
        success: (data) => {
            // update the data
        },
    })
    }

</script>
	<style>
	canvas{
		-moz-user-select: none;
		-webkit-user-select: none;
		-ms-user-select: none;
	}
	.chart-container {
		margin-left: 2%;
		margin-right: 2%;
        min-width: 40%;
	}
  .data-container{
    display: flex;
    flex-wrap: wrap;
		margin-left: 2%;
		margin-right: 2%;
    }
	.container {
		display: flex;
		flex-direction: row;
		justify-content: center;
        margin-left: 10px;
	}
  .data {
    margin-left: 2%;
    margin-right: 2%;
    }
  body {
    margin-top: 2%;
    margin-left: 2%;
    margin-right: 2%;
    }
	</style>
</head>

<body>
{% for p in ports %}
{# p of type ('name', ['list', 'of', 'variables'...]) #}
  <h3>{{p[0]}}</h3>
	<div class="container" id="{{p[0]}}">
    <div class="data-container" id="{{ ['data-', p[0]]|join }}">
        {% for v in p[1] %}
            <div class="data"><strong>{{v[0]}}: </strong><span> {{v[1]}} </span></div>
        {% endfor %}
    </div>
	</div>
{% endfor %}
</body>
</html>